# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      # - image: messa/circleci-python-with-mongodb:3.6
      - image: circleci/python:3.6.7

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/edman_test
    branches:
      only:
        - develop

    steps:
      - checkout

      # Download and cache dependencies
      # - restore_cache:
          # keys:
            # - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            # - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            source ./venv/bin/activate
            python --version
            pip install -U pip
            pip install -U setuptools
            pip install ~/edman_test/
          working_directory: ~/edman_test/tests

      - run:
          name: testing
          command: |
            python -m unittest
          working_directory: ~/edman_test/tests

      - store_artifacts:
          path: test-reports
          destination: test-reports

      # - save_cache:
          # paths:
          #   - ./venv
          # key: v1-dependencies-{{ checksum "requirements.txt" }}

      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
